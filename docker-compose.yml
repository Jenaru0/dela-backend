version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: dela-postgres
    environment:
      POSTGRES_DB: dela_platform
      POSTGRES_USER: dela_user
      POSTGRES_PASSWORD: dela_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dela-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: dela-api
    ports:
      - '3000:3000'
    environment:
      - DATABASE_URL=postgresql://dela_user:dela_password@postgres:5432/dela_platform?schema=public
      - JWT_SECRET=desarrollo_jwt_secret_2025
      - NODE_ENV=development
      - PORT=3000
      - FRONTEND_URL=http://localhost:3001
    depends_on:
      - postgres
    volumes:
      - ./api:/app/api
      - /app/node_modules
      - /app/api/node_modules
    networks:
      - dela-network
    command: ['npm', 'run', 'start:dev']

  # Frontend Web
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    container_name: dela-web
    ports:
      - '3001:3000'
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NODE_ENV=development
    depends_on:
      - api
    volumes:
      - ./web:/app/web
      - /app/node_modules
      - /app/web/node_modules
    networks:
      - dela-network

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: dela-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - dela-network

volumes:
  postgres_data:
  redis_data:

networks:
  dela-network:
    driver: bridge
