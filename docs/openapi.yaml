openapi: 3.1.0
info:
  title: DELA Deleites del Valle API
  version: 0.1.0
  description: |
    Contrato inicial para el MVP v1.
    Solo incluye los endpoints necesarios para catálogo, auth, carrito y checkout.
servers:
  - url: http://localhost:3000/api
paths:
  /products:
    get:
      summary: Listar productos
      tags: [Productos]
      responses:
        "200":
          description: Lista paginada de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /auth/register:
    post:
      summary: Registrar nuevo usuario
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "201":
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
  /auth/login:
    post:
      summary: Iniciar sesión
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Token de acceso JWT
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        "401":
          description: Credenciales inválidas
  /checkout:
    post:
      summary: Crear pedido y procesar pago
      tags: [Pedidos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckoutPayload"
      responses:
        "201":
          description: Pedido registrado (estado = PENDING)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Error de validación o stock insuficiente
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      properties:
        id:          { type: integer, example: 1 }
        name:        { type: string,  example: "Queso Fresco" }
        description: { type: string,  example: "Queso artesanal 250 g" }
        price:       { type: number,  format: float, example: 12.50 }
        stock:       { type: integer, example: 42 }
        imageUrl:    { type: string,  example: "https://..." }
    UserRegister:
      type: object
      required: [name, email, password]
      properties:
        name:     { type: string, example: "Ana" }
        email:    { type: string, format: email, example: "ana@mail.com" }
        password: { type: string, format: password, example: "Secr3ta#" }
    UserLogin:
      type: object
      required: [email, password]
      properties:
        email:    { type: string, example: "ana@mail.com" }
        password: { type: string, example: "Secr3ta#" }
    AuthToken:
      type: object
      properties:
        token: { type: string, example: "eyJhbGciOi..." }
    CheckoutPayload:
      type: object
      required: [items, addressId, stripeToken]
      properties:
        items:
          type: array
          items:
            type: object
            required: [productId, quantity]
            properties:
              productId: { type: integer, example: 1 }
              quantity:  { type: integer, example: 3 }
        addressId:   { type: integer, example: 5 }
        stripeToken: { type: string,  example: "tok_test_123" }
    Order:
      type: object
      properties:
        id:       { type: integer, example: 99 }
        total:    { type: number,  format: float, example: 37.50 }
        status:   { type: string,  example: "PENDING" }
        createdAt:{ type: string,  format: date-time, example: "2025-05-20T23:05:00Z" }
